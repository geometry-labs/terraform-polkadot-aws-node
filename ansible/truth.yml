---
- hosts: all
  become: yes
  tasks:
    - name: Include CloudHelper
      include_role:
        name: geometrylabs.cloud_helper
      vars:
        enable_cloud_wait: true
        enable_jq: true
    - name: Run volumes playbook
      include_role:
        name: volumes
      when: instance_store_enabled | default(false) | bool
    - name: Run OS hardening playbook
      include_role:
        name: dev-sec.os-hardening
      when: ansible_hardening | default(false) | bool
    - name: Run SSH hardening playbook
      include_role:
        name: dev-sec.ssh-hardening
      when: ansible_hardening | default(false) | bool
    - name: Install Consul
      include_role:
        name: ansible-consul
      vars:
        consul_group_name: "all"
        consul_raw_key: "{{ consul_gossip_key }}"
        auto_encrypt:
          enabled: consul_auto_encrypt_enabled | bool
        consul_connect_enabled: consul_connect_enabled | bool
        consul_datacenter: "{{ consul_datacenter }}"
        consul_ports_https: 8501
        consul_ports_grpc: 8502
        consul_acl_enable: consul_acl_enable | bool
        consul_acl_datacenter: "{{ consul_acl_datacenter}}"
        consul_acl_token: "{{ consul_acl_token }}"
        consul_config_custom:
          retry_join:
            - "{{ retry_join_string }}"
      when: consul_enabled|bool
    - name: Install Envoy proxy
      include_role:
        name: envoyproxy
      when: consul_connect_enabled | bool
    - name: Run Consul Cleanup playbook
      include_role:
        name: consul-cleanup
      when: consul_enabled|bool
    - name: Install Polkadot Base
      include_role:
        name: geometrylabs.polkadot_base
      vars:
        prometheus_port: "{{ item.value['polkadot_prometheus'] }}"
        api_rpc_port: "{{ item.value['json_rpc'] }}"
        api_wss_port: "{{ item.value['ws_rpc'] }}"
        health_check_port: "{{ item.value['api_health'] }}"
        chain: "{{ item.value['name'] }}"
      loop: "{{ network_settings | from_json | dict2items }}"
    - name: Install Polkadot Truth
      include_role:
        name: geometrylabs.polkadot_truth
      vars:
        prometheus_port: "{{ item.value['polkadot_prometheus'] }}"
        api_rpc_port: "{{ item.value['json_rpc'] }}"
        api_wss_port: "{{ item.value['ws_rpc'] }}"
        chain_stub: "{{ item.value['shortname'] }}"
        chain: "{{ item.value['name'] }}"
        project: "{{ item.value['name'] }}"
      loop: "{{ network_settings | from_json | dict2items }}"